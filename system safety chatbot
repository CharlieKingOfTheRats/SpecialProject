# failure_prediction_bot.py

from flask import Flask, request, jsonify
import joblib
import numpy as np
import os

app = Flask(__name__)

# Load your pre-trained machine learning model
# Make sure 'failure_model.pkl' is in the same directory or provide a full path
MODEL_PATH = os.getenv("MODEL_PATH", "failure_model.pkl")
model = joblib.load(MODEL_PATH)

# Define the expected sensor features in order
EXPECTED_FEATURES = [
    "temperature",
    "pressure",
    "vibration",
    "voltage",
    "current",
    "depth",
    "salinity"
]

@app.route('/predict', methods=['POST'])
def predict():
    """
    Accepts JSON sensor input and returns a failure prediction.
    """
    data = request.json

    # Ensure all expected features are present
    try:
        input_vector = [float(data[feature]) for feature in EXPECTED_FEATURES]
    except KeyError as e:
        return jsonify({"error": f"Missing required sensor: {str(e)}"}), 400
    except ValueError:
        return jsonify({"error": "All sensor inputs must be numerical"}), 400

    try:
        # Reshape input for prediction
        prediction = model.predict([input_vector])[0]
        probability = model.predict_proba([input_vector])[0].tolist()

        return jsonify({
            "prediction": int(prediction),
            "probability": probability
        })
    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True)